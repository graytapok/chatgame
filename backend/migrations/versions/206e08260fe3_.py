"""Add elo to statistics edit trigger

Revision ID: 206e08260fe3
Revises: ef424741de18
Create Date: 2025-01-17 14:18:12.792713

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '206e08260fe3'
down_revision = 'ef424741de18'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sub_statistics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('elo', sa.Integer(), nullable=False))

    with op.batch_alter_table('total_statistics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_elo', sa.Integer(), nullable=False))

    # ### end Alembic commands ###

    # Drop the old trigger and function
    op.execute("DROP TRIGGER IF EXISTS compute_total_statistics_trigger ON public.sub_statistics;")

    # Create new function for autogenerated fields in TotalStatistics with elo
    op.execute("""
        CREATE OR REPLACE FUNCTION public.compute_total_statistics()
            RETURNS trigger
            LANGUAGE plpgsql
        AS $function$
        BEGIN
            UPDATE total_statistics

            SET total_games = COALESCE((
                    SELECT SUM(games) 
                    FROM sub_statistics 
                    WHERE total_statistics_id = NEW.total_statistics_id
                ), 0),				

                total_wins = COALESCE((
                    SELECT SUM(wins) 
                        FROM sub_statistics
                        WHERE total_statistics_id = NEW.total_statistics_id
                    ), 0),

                total_draws = COALESCE((
                    SELECT SUM(draws) 
                    FROM sub_statistics 
                    WHERE total_statistics_id = NEW.total_statistics_id
                ), 0),

                total_losses = COALESCE((
                    SELECT SUM(losses) 
                    FROM sub_statistics 
                    WHERE total_statistics_id = NEW.total_statistics_id
                ), 0),
                
                total_elo = COALESCE((
                    SELECT SUM(elo)
                    FROM sub_statistics
                    WHERE total_statistics_id = NEW.total_statistics_id
                ), 0)

            WHERE id = NEW.total_statistics_id;

            RETURN NEW;
        END;
        $function$;
        """)

    # Add the new trigger
    op.execute("""
        CREATE trigger compute_total_statistics_trigger 
        AFTER INSERT OR UPDATE
        ON public.sub_statistics FOR EACH ROW EXECUTE FUNCTION compute_total_statistics()
        """)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('total_statistics', schema=None) as batch_op:
        batch_op.drop_column('total_elo')

    with op.batch_alter_table('sub_statistics', schema=None) as batch_op:
        batch_op.drop_column('elo')

    # ### end Alembic commands ###

    # Drop the trigger and function
    op.execute("DROP TRIGGER IF EXISTS compute_total_statistics_trigger ON public.sub_statistics;")

    # Create the old trigger
    op.execute("""
        CREATE OR REPLACE FUNCTION public.compute_total_statistics()
            RETURNS trigger
            LANGUAGE plpgsql
        AS $function$
        BEGIN
            UPDATE total_statistics

            SET total_games = COALESCE((
                    SELECT SUM(games) 
                    FROM sub_statistics 
                    WHERE total_statistics_id = NEW.total_statistics_id
                ), 0),				

                total_wins = COALESCE((
                    SELECT SUM(wins) 
                        FROM sub_statistics
                        WHERE total_statistics_id = NEW.total_statistics_id
                    ), 0),

                total_draws = COALESCE((
                    SELECT SUM(draws) 
                    FROM sub_statistics 
                    WHERE total_statistics_id = NEW.total_statistics_id
                ), 0),

                total_losses = COALESCE((
                    SELECT SUM(losses) 
                    FROM sub_statistics 
                    WHERE total_statistics_id = NEW.total_statistics_id
                ), 0)

            WHERE id = NEW.total_statistics_id;

            RETURN NEW;
        END;
        $function$;
        """)

    # Add the old trigger
    op.execute("""
        CREATE trigger compute_total_statistics_trigger 
        AFTER INSERT OR UPDATE
        ON public.sub_statistics FOR EACH ROW EXECUTE FUNCTION compute_total_statistics()
        """)
